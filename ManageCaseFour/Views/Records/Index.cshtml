@model ManageCaseFour.Models.RecordViewModel

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
@*<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.internalCaseId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.InternalCaseNumber)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.sourceId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DocumentSource)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.departmentId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Department)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.documentId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DocumentType)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.facilityId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Facility)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.recordReferenceNumber)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.pageNumber)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.recordEntryDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.provider)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.memo)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.serviceDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.noteSubjective)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.history)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.noteObjective)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.noteAssessment)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.notePlan)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.medications)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.age)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DOB)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.allergies)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.vitalSigns)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.diagnosis)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.fileContent)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.internalCaseId)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.InternalCaseNumber)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.sourceId)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DocumentSource)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.departmentId)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Department)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.documentId)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DocumentType)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.facilityId)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Facility)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.recordReferenceNumber)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.pageNumber)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.recordEntryDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.provider)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.memo)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.serviceDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.noteSubjective)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.history)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.noteObjective)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.noteAssessment)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.notePlan)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.medications)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.age)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DOB)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.allergies)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.vitalSigns)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.diagnosis)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.fileContent)
        </td>*@
        @*<td>
            @Html.ActionLink("Edit", "Edit", new { id=item.recordId }) |
            @Html.ActionLink("Details", "Details", new { id=item.recordId }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.recordId })
        </td>
    </tr>
}

</table>*@



<div>
    <table id="happyTable" class="display"></table>
</div>

<div id="demo"></div>

@section Scripts{
    <script type="text/javascript" charset="utf8" src="//cdn.datatables.net/1.10.12/js/jquery.dataTables.js"></script>
    <script>
    $(document).ready(function ()
    {
        $.ajax(
        $("#happyTable").DataTable({
            data: @Html.Raw(Json.Encode(Model.rCVModelArray)),
            rowHeight: 30,
            autowidth: true,
            columnDefs: [
                { width: "20%", targets: 3 }],
            columns: [
                { data: "thisCase.caseName",
                    title: "Case Name"},
                { data: "record.recordId",
                title: "Record Id"},
                {data: "department.departmentCode",
                    title: "Department Code"},
                { data: "record.serviceDate",
                    "render": function (data, type, row) {
                        return ToJavaScriptDate(data);},
                    title: "Date of Service"},
                { data: "record.provider",
                title: "Provider"},
                {data: "facility.facilityId",
                    title: "Facility ID"}]

        }))
    })


    function ToJavaScriptDate(value) {
        var pattern = /Date\(([^)]+)\)/;
        var results = pattern.exec(value);
        var dt = new Date(parseFloat(results[1]));
        return (dt.getMonth() + 1) + "/" + dt.getDate() + "/" + dt.getFullYear();
    }


    function PerformSearch() {
        var term = document.getElementById("term").value;
        var medlineURL = "https://wsearch.nlm.nih.gov/ws/query?db=healthTopics&term=";
        $.get("http://query.yahooapis.com/v1/public/yql",
        {
            q: "select * from xml where url=\"" + medlineURL + term  + "\"",
            format: "xml"
        },
        function (xml) {
            console.log(xml);
            myFunction(xml);
            //$.ajax({
            //    url: "/Records/DisplayXMLResults/",
            //    type: "POST",
            //    processData: false,
            //    contentType: "text/xml",
            //    data: { data:xml }
            //});
        })
    }

    function myFunction(xml) {
        var i;
        var xmlDoc = xml.responseXML;
        var table="<tr><th>Title</th><th>Snippet</th></tr>";
        var x = xmlDoc.getElementsByTagName("document");
        for (i = 0; i <10; i++) { 
            table += "<tr><td>" +
            x[i].getElementsByTagName("title")[0].childNodes[0].nodeValue +
            "</td><td>" +
            x[i].getElementsByTagName("snippet")[0].childNodes[0].nodeValue +
            "</td></tr>";
        }
        document.getElementById("demo").innerHTML = table;
    }

    </script>




}
